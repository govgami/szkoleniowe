<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="14" passed="14">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="3691" started-at="2017-11-06T12:18:48Z" finished-at="2017-11-06T12:18:52Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="3691" started-at="2017-11-06T12:18:48Z" finished-at="2017-11-06T12:18:52Z">
      <class name="testing._DbTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:testing._DbTest@8bd1b6a]" name="setUp" is-config="true" duration-ms="15" started-at="2017-11-06T13:18:48Z" finished-at="2017-11-06T13:18:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="shouldCreateDefaultConnection()[pri:0, instance:testing._DbTest@8bd1b6a]" name="shouldCreateDefaultConnection" duration-ms="2707" started-at="2017-11-06T13:18:48Z" finished-at="2017-11-06T13:18:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldCreateDefaultConnection -->
        <test-method status="PASS" signature="shouldThrowRuntimeExceptionDueToWrongParameter()[pri:0, instance:testing._DbTest@8bd1b6a]" name="shouldThrowRuntimeExceptionDueToWrongParameter" duration-ms="10" started-at="2017-11-06T13:18:51Z" finished-at="2017-11-06T13:18:51Z">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[Invalid argument: drop database]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: Invalid argument: drop database
	at persistence.db.queries.PGQuery.validateQueryArgAgainstSQLInjection(PGQuery.java:136)
	at testing._DbTest.shouldThrowRuntimeExceptionDueToWrongParameter(_DbTest.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldThrowRuntimeExceptionDueToWrongParameter -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:testing._DbTest@8bd1b6a]" name="setUp" is-config="true" duration-ms="0" started-at="2017-11-06T13:18:51Z" finished-at="2017-11-06T13:18:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:testing._DbTest@8bd1b6a]" name="setUp" is-config="true" duration-ms="1" started-at="2017-11-06T13:18:51Z" finished-at="2017-11-06T13:18:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="shouldGetHighestPriceDifferenceOfCurrencyRatios()[pri:0, instance:testing._DbTest@8bd1b6a]" name="shouldGetHighestPriceDifferenceOfCurrencyRatios" duration-ms="241" started-at="2017-11-06T13:18:51Z" depends-on-methods="testing._DbTest.shouldCreateDefaultConnection" finished-at="2017-11-06T13:18:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldGetHighestPriceDifferenceOfCurrencyRatios -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:testing._DbTest@8bd1b6a]" name="setUp" is-config="true" duration-ms="0" started-at="2017-11-06T13:18:51Z" finished-at="2017-11-06T13:18:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="shouldGetLimittedSortedCurrency()[pri:0, instance:testing._DbTest@8bd1b6a]" name="shouldGetLimittedSortedCurrency" duration-ms="12" started-at="2017-11-06T13:18:51Z" depends-on-methods="testing._DbTest.shouldCreateDefaultConnection" finished-at="2017-11-06T13:18:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldGetLimittedSortedCurrency -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:testing._DbTest@8bd1b6a]" name="setUp" is-config="true" duration-ms="1" started-at="2017-11-06T13:18:51Z" finished-at="2017-11-06T13:18:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="shouldGetLimittedSortedCurrencyRatiosLowestBidPrice()[pri:0, instance:testing._DbTest@8bd1b6a]" name="shouldGetLimittedSortedCurrencyRatiosLowestBidPrice" duration-ms="12" started-at="2017-11-06T13:18:51Z" depends-on-methods="testing._DbTest.shouldCreateDefaultConnection" finished-at="2017-11-06T13:18:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldGetLimittedSortedCurrencyRatiosLowestBidPrice -->
        <test-method status="PASS" signature="shouldGetSortedCurrency()[pri:0, instance:testing._DbTest@8bd1b6a]" name="shouldGetSortedCurrency" duration-ms="74" started-at="2017-11-06T13:18:51Z" depends-on-methods="testing._DbTest.shouldCreateDefaultConnection" finished-at="2017-11-06T13:18:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldGetSortedCurrency -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:testing._DbTest@8bd1b6a]" name="setUp" is-config="true" duration-ms="0" started-at="2017-11-06T13:18:51Z" finished-at="2017-11-06T13:18:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="shouldInsertNewCountry()[pri:0, instance:testing._DbTest@8bd1b6a]" name="shouldInsertNewCountry" duration-ms="126" started-at="2017-11-06T13:18:51Z" depends-on-methods="testing._DbTest.shouldCreateDefaultConnection" finished-at="2017-11-06T13:18:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldInsertNewCountry -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:testing._DbTest@8bd1b6a]" name="setUp" is-config="true" duration-ms="0" started-at="2017-11-06T13:18:51Z" finished-at="2017-11-06T13:18:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:testing._DbTest@8bd1b6a]" name="setUp" is-config="true" duration-ms="0" started-at="2017-11-06T13:18:52Z" finished-at="2017-11-06T13:18:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="shouldInsertNewCurrency()[pri:0, instance:testing._DbTest@8bd1b6a]" name="shouldInsertNewCurrency" duration-ms="22" started-at="2017-11-06T13:18:52Z" depends-on-methods="testing._DbTest.shouldCreateDefaultConnection" finished-at="2017-11-06T13:18:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldInsertNewCurrency -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:testing._DbTest@8bd1b6a]" name="setUp" is-config="true" duration-ms="0" started-at="2017-11-06T13:18:52Z" finished-at="2017-11-06T13:18:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="shouldFetchObjects()[pri:0, instance:testing._DbTest@8bd1b6a]" name="shouldFetchObjects" duration-ms="10" started-at="2017-11-06T13:18:52Z" depends-on-methods="testing._DbTest.shouldInsertNewCountry, testing._DbTest.shouldInsertNewCurrency" finished-at="2017-11-06T13:18:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldFetchObjects -->
        <test-method status="PASS" signature="shouldGetCurrencyRatio()[pri:0, instance:testing._DbTest@8bd1b6a]" name="shouldGetCurrencyRatio" duration-ms="39" started-at="2017-11-06T13:18:52Z" depends-on-methods="testing._DbTest.shouldInsertNewCurrency" finished-at="2017-11-06T13:18:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldGetCurrencyRatio -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:testing._DbTest@8bd1b6a]" name="setUp" is-config="true" duration-ms="0" started-at="2017-11-06T13:18:52Z" finished-at="2017-11-06T13:18:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:testing._DbTest@8bd1b6a]" name="setUp" is-config="true" duration-ms="0" started-at="2017-11-06T13:18:52Z" finished-at="2017-11-06T13:18:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="shouldConnectCurrencyCountry()[pri:0, instance:testing._DbTest@8bd1b6a]" name="shouldConnectCurrencyCountry" duration-ms="48" started-at="2017-11-06T13:18:52Z" depends-on-methods="testing._DbTest.shouldInsertNewCountry, testing._DbTest.shouldInsertNewCurrency, testing._DbTest.shouldFetchObjects" finished-at="2017-11-06T13:18:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldConnectCurrencyCountry -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:testing._DbTest@8bd1b6a]" name="setUp" is-config="true" duration-ms="1" started-at="2017-11-06T13:18:52Z" finished-at="2017-11-06T13:18:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="shouldConnectSecondCurrencyCountry()[pri:0, instance:testing._DbTest@8bd1b6a]" name="shouldConnectSecondCurrencyCountry" duration-ms="161" started-at="2017-11-06T13:18:52Z" depends-on-methods="testing._DbTest.shouldInsertNewCountry, testing._DbTest.shouldInsertNewCurrency, testing._DbTest.shouldFetchObjects" finished-at="2017-11-06T13:18:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldConnectSecondCurrencyCountry -->
        <test-method status="PASS" signature="shouldDisconnectCurrencyCountry()[pri:0, instance:testing._DbTest@8bd1b6a]" name="shouldDisconnectCurrencyCountry" duration-ms="44" started-at="2017-11-06T13:18:52Z" depends-on-methods="testing._DbTest.shouldConnectSecondCurrencyCountry, testing._DbTest.shouldConnectCurrencyCountry" finished-at="2017-11-06T13:18:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldDisconnectCurrencyCountry -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:testing._DbTest@8bd1b6a]" name="setUp" is-config="true" duration-ms="0" started-at="2017-11-06T13:18:52Z" finished-at="2017-11-06T13:18:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:testing._DbTest@8bd1b6a]" name="setUp" is-config="true" duration-ms="1" started-at="2017-11-06T13:18:52Z" finished-at="2017-11-06T13:18:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="shouldRemoveObjects()[pri:0, instance:testing._DbTest@8bd1b6a]" name="shouldRemoveObjects" duration-ms="46" started-at="2017-11-06T13:18:52Z" depends-on-methods="testing._DbTest.shouldGetCurrencyRatio, testing._DbTest.shouldDisconnectCurrencyCountry" finished-at="2017-11-06T13:18:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldRemoveObjects -->
      </class> <!-- testing._DbTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
