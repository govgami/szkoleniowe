<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="2" failed="1" ignored="0" total="11" passed="8">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="5174" started-at="2017-11-02T14:42:44Z" finished-at="2017-11-02T14:42:49Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="5174" started-at="2017-11-02T14:42:44Z" finished-at="2017-11-02T14:42:49Z">
      <class name="testing._DbTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:testing._DbTest@cc285f4]" name="setUp" is-config="true" duration-ms="10" started-at="2017-11-02T15:42:44Z" finished-at="2017-11-02T15:42:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="shouldCreateDefaultConnection()[pri:0, instance:testing._DbTest@cc285f4]" name="shouldCreateDefaultConnection" duration-ms="4160" started-at="2017-11-02T15:42:44Z" finished-at="2017-11-02T15:42:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldCreateDefaultConnection -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:testing._DbTest@cc285f4]" name="setUp" is-config="true" duration-ms="1" started-at="2017-11-02T15:42:48Z" finished-at="2017-11-02T15:42:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="shouldThrowRuntimeExceptionDueToWrongParameter()[pri:0, instance:testing._DbTest@cc285f4]" name="shouldThrowRuntimeExceptionDueToWrongParameter" duration-ms="6" started-at="2017-11-02T15:42:48Z" finished-at="2017-11-02T15:42:48Z">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[Invalid argument: drop database]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: Invalid argument: drop database
	at persistence.db.queries.PGQuery.validateQueryArgAgainstSQLInjection(PGQuery.java:151)
	at testing._DbTest.shouldThrowRuntimeExceptionDueToWrongParameter(_DbTest.java:46)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldThrowRuntimeExceptionDueToWrongParameter -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:testing._DbTest@cc285f4]" name="setUp" is-config="true" duration-ms="1" started-at="2017-11-02T15:42:48Z" finished-at="2017-11-02T15:42:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="shouldGetHighestPriceDifferenceOfCurrencyRatios()[pri:0, instance:testing._DbTest@cc285f4]" name="shouldGetHighestPriceDifferenceOfCurrencyRatios" duration-ms="350" started-at="2017-11-02T15:42:48Z" depends-on-methods="testing._DbTest.shouldCreateDefaultConnection" finished-at="2017-11-02T15:42:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldGetHighestPriceDifferenceOfCurrencyRatios -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:testing._DbTest@cc285f4]" name="setUp" is-config="true" duration-ms="0" started-at="2017-11-02T15:42:49Z" finished-at="2017-11-02T15:42:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="shouldGetLimittedSortedCurrency()[pri:0, instance:testing._DbTest@cc285f4]" name="shouldGetLimittedSortedCurrency" duration-ms="5" started-at="2017-11-02T15:42:49Z" depends-on-methods="testing._DbTest.shouldCreateDefaultConnection" finished-at="2017-11-02T15:42:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldGetLimittedSortedCurrency -->
        <test-method status="PASS" signature="shouldGetLimittedSortedCurrencyRatiosLowestBidPrice()[pri:0, instance:testing._DbTest@cc285f4]" name="shouldGetLimittedSortedCurrencyRatiosLowestBidPrice" duration-ms="9" started-at="2017-11-02T15:42:49Z" depends-on-methods="testing._DbTest.shouldCreateDefaultConnection" finished-at="2017-11-02T15:42:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldGetLimittedSortedCurrencyRatiosLowestBidPrice -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:testing._DbTest@cc285f4]" name="setUp" is-config="true" duration-ms="0" started-at="2017-11-02T15:42:49Z" finished-at="2017-11-02T15:42:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:testing._DbTest@cc285f4]" name="setUp" is-config="true" duration-ms="1" started-at="2017-11-02T15:42:49Z" finished-at="2017-11-02T15:42:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="shouldGetSortedCurrency()[pri:0, instance:testing._DbTest@cc285f4]" name="shouldGetSortedCurrency" duration-ms="67" started-at="2017-11-02T15:42:49Z" depends-on-methods="testing._DbTest.shouldCreateDefaultConnection" finished-at="2017-11-02T15:42:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldGetSortedCurrency -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:testing._DbTest@cc285f4]" name="setUp" is-config="true" duration-ms="1" started-at="2017-11-02T15:42:49Z" finished-at="2017-11-02T15:42:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="shouldInsertNewCurrency()[pri:0, instance:testing._DbTest@cc285f4]" name="shouldInsertNewCurrency" duration-ms="273" started-at="2017-11-02T15:42:49Z" depends-on-methods="testing._DbTest.shouldCreateDefaultConnection" finished-at="2017-11-02T15:42:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldInsertNewCurrency -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:testing._DbTest@cc285f4]" name="setUp" is-config="true" duration-ms="1" started-at="2017-11-02T15:42:49Z" finished-at="2017-11-02T15:42:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="shouldInsertNewCountry()[pri:0, instance:testing._DbTest@cc285f4]" name="shouldInsertNewCountry" duration-ms="84" started-at="2017-11-02T15:42:49Z" depends-on-methods="testing._DbTest.shouldInsertNewCurrency, testing._DbTest.shouldCreateDefaultConnection" finished-at="2017-11-02T15:42:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldInsertNewCountry -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:testing._DbTest@cc285f4]" name="setUp" is-config="true" duration-ms="0" started-at="2017-11-02T15:42:49Z" finished-at="2017-11-02T15:42:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="shouldConnectCurrencyCountry()[pri:0, instance:testing._DbTest@cc285f4]" name="shouldConnectCurrencyCountry" duration-ms="109" started-at="2017-11-02T15:42:49Z" depends-on-methods="testing._DbTest.shouldInsertNewCountry, testing._DbTest.shouldInsertNewCurrency" finished-at="2017-11-02T15:42:49Z">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[javax.persistence.PersistenceException: org.hibernate.exception.ConstraintViolationException: could not execute statement]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: javax.persistence.PersistenceException: org.hibernate.exception.ConstraintViolationException: could not execute statement
	at testing._DbTest.shouldConnectCurrencyCountry(_DbTest.java:148)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:669)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: javax.persistence.PersistenceException: org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:149)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:157)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:164)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1443)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:493)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3207)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2413)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:467)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:156)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$100(JdbcResourceLocalTransactionCoordinatorImpl.java:38)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:231)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:68)
	at persistence.db.queries.BasicOperations.closeSession(BasicOperations.java:67)
	at persistence.db.queries.ObjectOperations.InsertOrUpdate(ObjectOperations.java:31)
	at persistence.db.queries.PGQuery.ConnectCountryCurrency(PGQuery.java:20)
	at testing._DbTest.shouldConnectCurrencyCountry(_DbTest.java:146)
	... 25 more
Caused by: org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:112)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:42)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:111)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:97)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:178)
	at org.hibernate.engine.jdbc.batch.internal.NonBatchingBatch.addToBatch(NonBatchingBatch.java:45)
	at org.hibernate.persister.collection.AbstractCollectionPersister.recreate(AbstractCollectionPersister.java:1332)
	at org.hibernate.action.internal.CollectionRecreateAction.execute(CollectionRecreateAction.java:50)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:589)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:463)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:337)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:39)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1437)
	... 37 more
Caused by: org.postgresql.util.PSQLException: ERROR: null value in column "id" violates not-null constraint
  Detail: Failing row contains (null, 3908, 3909).
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2477)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2190)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:300)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:428)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:354)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:169)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:136)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:175)
	... 45 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldConnectCurrencyCountry -->
        <test-method status="SKIP" signature="shouldDisconnectCurrencyCountry()[pri:0, instance:testing._DbTest@cc285f4]" name="shouldDisconnectCurrencyCountry" duration-ms="0" started-at="2017-11-02T15:42:49Z" depends-on-methods="testing._DbTest.shouldConnectCurrencyCountry" finished-at="2017-11-02T15:42:49Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method _DbTest.shouldDisconnectCurrencyCountry()[pri:0, instance:testing._DbTest@cc285f4] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method _DbTest.shouldDisconnectCurrencyCountry()[pri:0, instance:testing._DbTest@cc285f4] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1092)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldDisconnectCurrencyCountry -->
        <test-method status="SKIP" signature="shouldRemoveObjects()[pri:0, instance:testing._DbTest@cc285f4]" name="shouldRemoveObjects" duration-ms="0" started-at="2017-11-02T15:42:49Z" depends-on-methods="testing._DbTest.shouldDisconnectCurrencyCountry" finished-at="2017-11-02T15:42:49Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method _DbTest.shouldRemoveObjects()[pri:0, instance:testing._DbTest@cc285f4] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method _DbTest.shouldRemoveObjects()[pri:0, instance:testing._DbTest@cc285f4] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1092)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldRemoveObjects -->
      </class> <!-- testing._DbTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
